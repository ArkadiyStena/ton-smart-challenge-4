forall X -> int is_null (X x) asm "ISNULL";
forall X -> (tuple, X) ~tpop (tuple t) asm "TPOP"; 

() recv_internal() {
}

;; testable
(cell) find_branch_by_hash(int hash, cell tree) method_id {
    cell c = null();
    slice s = null();
    ;; tuple stack = to_tuple(single(tree));
    tuple stack = empty_tuple();
    stack~tpush(tree);

    while (~ stack.is_null()) {
        c = stack~tpop();
        if (hash == cell_hash(c)) {
            return c;
        }
        s = c.begin_parse();
        repeat (s.slice_refs()) {
            stack~tpush(s~load_ref());
        }
    }
    return begin_cell().end_cell();
}